"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateStyle = exports.validateProps = void 0;
const enums_1 = require("../common/enums");
const getCalendarView = (value) => {
    if (value.toLowerCase() === enums_1.CALENDAR_VIEW.DAY.toLowerCase()) {
        return enums_1.CALENDAR_VIEW.DAY;
    }
    if (value.toLowerCase() === enums_1.CALENDAR_VIEW.THREE_DAYS.toLowerCase()) {
        return enums_1.CALENDAR_VIEW.THREE_DAYS;
    }
    if (value.toLowerCase() === enums_1.CALENDAR_VIEW.WEEK.toLowerCase()) {
        return enums_1.CALENDAR_VIEW.WEEK;
    }
    if (value.toLowerCase() === enums_1.CALENDAR_VIEW.MONTH.toLowerCase()) {
        return enums_1.CALENDAR_VIEW.MONTH;
    }
    if (value.toLowerCase() === enums_1.CALENDAR_VIEW.AGENDA.toLowerCase()) {
        return enums_1.CALENDAR_VIEW.AGENDA;
    }
    return null;
};
const validateProps = (props) => {
    // Validate views
    if (props.disabledViews) {
        // throw error if all views are disabled
        if (props.disabledViews.length === Object.values(enums_1.CALENDAR_VIEW).length) {
            throw Error('[Kalend]: At least one calendar view has to be enabled');
        }
    }
    // validate initial view
    if (props.initialView) {
        const initialView = getCalendarView(props.initialView.toString());
        if (!initialView) {
            throw Error(`[Kalend]: Initial view "${props.initialView}" is not valid`);
        }
    }
    // validate weekDayStart
    if (props.weekDayStart &&
        props.weekDayStart !== 'Monday' &&
        props.weekDayStart !== 'Sunday') {
        throw Error(`[Kalend]: invalid weekDayStart prop "${props.weekDayStart}". Set either Monday or Sunday`);
    }
    // validate timeFormat
    if (props.timeFormat) {
        if (props.timeFormat !== enums_1.TIME_FORMAT.H_24.toString() &&
            props.timeFormat !== enums_1.TIME_FORMAT.H_12.toString()) {
            `[Kalend]: invalid timeFormat prop "${props.timeFormat}". Valid values are '${enums_1.TIME_FORMAT.H_24.toString()}' or '${enums_1.TIME_FORMAT.H_12.toString()}'`;
        }
    }
};
exports.validateProps = validateProps;
const validateStyle = (testMode) => {
    if (testMode) {
        return;
    }
    const el = document.querySelector('.Kalend__Calendar__root');
    if (el) {
        if (window.getComputedStyle(el).display !== 'flex') {
            throw Error(`[Kalend]: CSS file not imported.
         Reason: You probably forgot to import css file in your app as
         import 'kalend/dist/styles/index.css';

         Valid usage:
         import Kalend from 'kalend';
         import 'kalend/dist/styles/index.css';`);
        }
    }
};
exports.validateStyle = validateStyle;
