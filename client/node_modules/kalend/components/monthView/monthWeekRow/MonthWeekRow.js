"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const store_1 = require("../../../context/store");
const enums_1 = require("../../../common/enums");
const common_1 = require("../../../utils/common");
const react_1 = require("react");
const CalendarHeaderDates_1 = __importDefault(require("../../calendarHeader/components/calendarHeaderDates/CalendarHeaderDates"));
const EventButton_1 = __importDefault(require("../../eventButton/EventButton"));
const MonthViewButtonMore_1 = __importDefault(require("../monthViewButtonMore/MonthViewButtonMore"));
const MonthWeekRow = (props) => {
    const { days, index, itemRows } = props;
    const [store] = (0, react_1.useContext)(store_1.Context);
    const { monthLayout } = store;
    const renderEvents = (data, i) => {
        if (!data || !(data === null || data === void 0 ? void 0 : data[i])) {
            return [];
        }
        return itemRows.map((item) => {
            return ((0, jsx_runtime_1.jsx)(EventButton_1.default, { item: Object.assign({}, item), meta: item.meta, type: enums_1.EVENT_TYPE.MONTH, index: i }, `${item.event.id}${item.event.internalID ? item.event.internalID : ''}`));
        });
    };
    const events = renderEvents(monthLayout, index);
    // const style: { maxHeight: number } = { maxHeight: height / 6 - 30 };
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: `${(0, common_1.parseCssDark)('Kalend__MonthWeekRow__container', store.isDark)} ${index > 4 ? '--no-border' : ''}` }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'Kalend__MonthWeekRow__day' }, { children: (0, jsx_runtime_1.jsx)(CalendarHeaderDates_1.default, { calendarDays: days, daysNum: 7, setViewChanged: props.setViewChanged }) })), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'Kalend__MonthWeekRow__container-events' }, { children: events })), (0, jsx_runtime_1.jsx)(MonthViewButtonMore_1.default, { calendarDays: days })] })));
};
exports.default = MonthWeekRow;
