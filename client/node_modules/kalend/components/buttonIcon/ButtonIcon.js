"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
// eslint-disable-next-line @typescript-eslint/no-use-before-define
const react_1 = __importStar(require("react"));
const common_1 = require("../../utils/common");
const ButtonIcon = (props) => {
    const [isPressed, setIsPressed] = (0, react_1.useState)(false);
    const { children, onClick, size, disabled, isDark, iconSize, noActive, backdropClassName, style, } = props;
    const handleTouchStart = () => setIsPressed(true);
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    const handleTouchOff = (e) => setIsPressed(false);
    const containerClassName = !size
        ? 'Kalend__ButtonIcon__container'
        : `Kalend__ButtonIcon__container-${size}`;
    const backdropClassNameString = backdropClassName
        ? backdropClassName
        : 'Kalend__ButtonIcon__backdrop';
    const buttonClassName = noActive
        ? `${disabled ? 'Kalend__ButtonIcon__disabled ' : ''}Kalend__ButtonIcon-inactive`
        : `${disabled ? 'Kalend__ButtonIcon__disabled ' : ''}Kalend__ButtonIcon`;
    const IconElement = react_1.default.cloneElement(children, {
        className: (0, common_1.parseCssDark)(`Kalend__ButtonIcon__svg${iconSize ? `-${iconSize}` : '-normal'}`, isDark),
    });
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: containerClassName, style: style }, { children: (0, jsx_runtime_1.jsxs)("button", Object.assign({ className: (0, common_1.parseCssDark)(buttonClassName, isDark), onClick: onClick, disabled: disabled, onTouchStart: handleTouchStart, onTouchEnd: handleTouchOff }, { children: [IconElement, isPressed ? (0, jsx_runtime_1.jsx)("div", { className: backdropClassNameString }) : null] })) })));
};
exports.default = ButtonIcon;
