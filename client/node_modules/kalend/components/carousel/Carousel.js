"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const eva_icons_1 = require("../eva-icons");
const react_1 = require("react");
const SCREEN_PORTION = 6;
const Carousel = (props) => {
    const [swipeAnimation, setSwipeAnimation] = (0, react_1.useState)('');
    const { onPageChange } = props;
    const baseWidth = 0;
    const [isSwiping, setSwiping] = (0, react_1.useState)(0);
    const [initTouchX, setInitTouchX] = (0, react_1.useState)(0);
    const [initTouchY, setInitTouchY] = (0, react_1.useState)(0);
    const [touchDiff, setTouchDiff] = (0, react_1.useState)(0);
    const [yPosition, setYPosition] = (0, react_1.useState)(0);
    const OFFSET_FOR_TRIGGER = baseWidth / SCREEN_PORTION;
    // Scroll to middle screen
    (0, react_1.useEffect)(() => {
        var _a;
        (_a = document.getElementById('Kalend__carousel')) === null || _a === void 0 ? void 0 : _a.scrollTo(baseWidth / 2, 0);
    }, []);
    const handleTouchStart = (e) => {
        const touchEventX = e.nativeEvent.touches[0].clientX;
        const touchEventY = e.nativeEvent.touches[0].clientY;
        // Set initial touch point
        // setXBase(touchEventX);
        setInitTouchX(touchEventX);
        setInitTouchY(touchEventY);
    };
    const handleTouchEnd = () => {
        // Going forward
        if (touchDiff > OFFSET_FOR_TRIGGER) {
            onPageChange(true);
            setSwipeAnimation('Kalend__carousel-swipe-right');
            // scrollBack();
        }
        else if (touchDiff * -1 > OFFSET_FOR_TRIGGER) {
            // Going back
            setSwipeAnimation('Kalend__carousel-swipe-left');
            onPageChange(false);
            // scrollBack();
        }
        else {
            // Revert to base position
            // scrollBack();
        }
        setTouchDiff(0);
        setSwiping(0);
        setYPosition(0);
    };
    const handleMove = (e) => {
        // Handle touch events
        const touchEventX = e.nativeEvent.touches[0].clientX;
        const touchEventY = e.nativeEvent.touches[0].clientY;
        const differenceInTouch = initTouchX - touchEventX;
        if ((differenceInTouch > 0 && differenceInTouch > 20) ||
            (differenceInTouch < 0 && differenceInTouch < -20)) {
            setTouchDiff(differenceInTouch);
            setSwiping(differenceInTouch);
        }
    };
    const baseStyleRight = {
        width: '100%',
        height: '100%',
        zIndex: 9999,
        position: 'fixed',
    };
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ onTouchMove: handleMove, onTouchStart: handleTouchStart, onTouchEnd: handleTouchEnd, className: `Kalend__carousel__wrapper ${swipeAnimation}`, id: 'Kalend__carousel' }, { children: [props.children, isSwiping > 0 ? ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'Kalend__carousel__control-right', style: baseStyleRight }, { children: (0, jsx_runtime_1.jsx)(eva_icons_1.EvaIcons.ChevronRight, { className: 'Kalend__svg-icon' }) }))) : null, isSwiping < 0 ? ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'Kalend__carousel__control-left', style: baseStyleRight }, { children: (0, jsx_runtime_1.jsx)(eva_icons_1.EvaIcons.ChevronLeft, { className: 'Kalend__svg-icon', style: { width: 50, height: 50 } }) }))) : null] })));
};
exports.default = Carousel;
