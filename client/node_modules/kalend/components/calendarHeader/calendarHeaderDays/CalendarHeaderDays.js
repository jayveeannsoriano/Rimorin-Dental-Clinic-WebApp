"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const enums_1 = require("../../../common/enums");
const store_1 = require("../../../context/store");
const react_1 = require("react");
const CalendarHeaderColText_1 = __importDefault(require("../components/calendarHeaderColText/CalendarHeaderColText"));
const CalendarHeaderDates_1 = __importDefault(require("../components/calendarHeaderDates/CalendarHeaderDates"));
const CalendarHeaderWeekDays_1 = __importDefault(require("../components/calendarHeaderWeekDays/CalendarHeaderWeekDays"));
const CalendarHeaderWrapper_1 = __importDefault(require("../components/calendarHeaderWrapper/CalendarHeaderWrapper"));
const CalendarHeaderDays = (props) => {
    const { isMonthView } = props;
    const [store] = (0, react_1.useContext)(store_1.Context);
    const { calendarDays, selectedDate, selectedView, showWeekNumbers, translations, } = store;
    const daysNum = isMonthView ? 7 : calendarDays.length;
    return ((0, jsx_runtime_1.jsxs)(CalendarHeaderWrapper_1.default, Object.assign({ isMonthView: isMonthView }, { children: [!isMonthView &&
                selectedView !== enums_1.CALENDAR_VIEW.AGENDA &&
                showWeekNumbers ? ((0, jsx_runtime_1.jsx)("div", Object.assign({ style: { position: 'absolute', left: 8 } }, { children: (0, jsx_runtime_1.jsxs)("p", Object.assign({ className: 'Kalend__WeekNumbersCol__text-weekdays' }, { children: [translations['weekShort'], selectedDate.weekNumber] })) }))) : null, (0, jsx_runtime_1.jsx)(CalendarHeaderColText_1.default, { children: (0, jsx_runtime_1.jsx)(CalendarHeaderWeekDays_1.default, { daysNum: daysNum, days: calendarDays }) }), !isMonthView ? ((0, jsx_runtime_1.jsx)(CalendarHeaderColText_1.default, { children: (0, jsx_runtime_1.jsx)(CalendarHeaderDates_1.default, { calendarDays: calendarDays, daysNum: daysNum, setViewChanged: props.setViewChanged }) })) : null] })));
};
exports.default = CalendarHeaderDays;
