"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const store_1 = require("../../../context/store");
const enums_1 = require("../../../common/enums");
const calendarDays_1 = require("../../../utils/calendarDays");
const react_1 = require("react");
const useDeepCompareEffect_1 = require("../../../utils/useDeepCompareEffect");
const EventButton_1 = __importDefault(require("../../eventButton/EventButton"));
const CalendarHeaderEvents = () => {
    const [store] = (0, react_1.useContext)(store_1.Context);
    const { selectedView, width, calendarDays } = store;
    const renderEvents = (data, sequence) => {
        return data === null || data === void 0 ? void 0 : data.map((item) => {
            // const item: any = keyValue[1];
            return ((0, jsx_runtime_1.jsx)(EventButton_1.default, { item: item, type: enums_1.EVENT_TYPE.HEADER }, `${item.event.id}${item.event.internalID ? item.event.internalID : ''}` + sequence));
        });
    };
    const column = width / (0, calendarDays_1.getDaysNum)(selectedView);
    const colWidthStyle = {
        width: column,
    };
    const daysNumbers = calendarDays.map((calendarDay) => {
        return ((0, jsx_runtime_1.jsx)("div", { className: 'Kalend__CalendarHeaderEvents__col-wrapper', style: colWidthStyle }, calendarDay.toString()));
    });
    const [headerEvents, setHeaderEvents] = (0, react_1.useState)(null);
    const headerStyle = {
        // paddingLeft: CALENDAR_OFFSET_LEFT,
        height: store.headerEventRowsCount + 20,
        // transition: 'all 0.3s',
    };
    // useEffect(() => {
    //   // setTimeout(() => {
    //   setContext('height', getHeight());
    //   // }, 600);
    // }, [store.headerEventRowsCount]);
    // useEffect(() => {
    //   // set animation
    //   setAnimation('Kalend__CalendarHeaderEvents_animationExpand');
    //   // clean animation
    //   setTimeout(() => {
    //     setAnimation('');
    //   }, 600);
    // }, [store.headerEventRowsCount]);
    (0, useDeepCompareEffect_1.useDeepCompareEffect)(() => {
        const headerEventsRaw = renderEvents(store.headerLayout, store.layoutUpdateSequence + 1);
        setHeaderEvents(headerEventsRaw);
    }, [store.headerLayout]);
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: `Kalend__CalendarHeaderEvents__container`, style: headerStyle }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'Kalend__CalendarHeaderEvents__row' }, { children: daysNumbers })), headerEvents] })));
};
exports.default = CalendarHeaderEvents;
