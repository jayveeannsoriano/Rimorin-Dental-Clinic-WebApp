"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const store_1 = require("../../../context/store");
const react_1 = require("react");
const EventSummary_1 = __importDefault(require("../components/eventSummary/EventSummary"));
const EventTime_1 = __importDefault(require("../components/eventTime/EventTime"));
const EventAgenda = (props) => {
    const { isDark, event, type } = props;
    const [store] = (0, react_1.useContext)(store_1.Context);
    const { isMobile } = store;
    return !isMobile ? ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: 'Kalend__EventAgenda__container' }, { children: [(0, jsx_runtime_1.jsx)(EventTime_1.default, { isDark: isDark, event: event, type: type, isDarkColor: isDark }), (0, jsx_runtime_1.jsx)("div", Object.assign({ style: {
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center',
                } }, { children: (0, jsx_runtime_1.jsx)("div", { style: {
                        width: 20,
                        height: 20,
                        borderRadius: '50%',
                        background: event.color,
                        marginLeft: 8,
                        marginRight: 8,
                        filter: isDark ? 'saturate(60%) brightness(120%)' : 'none',
                    } }) })), (0, jsx_runtime_1.jsx)(EventSummary_1.default, { summary: event.summary, isDark: isDark, type: type, isDarkColor: isDark, event: event })] }))) : ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: 'Kalend__EventAgenda__container' }, { children: [(0, jsx_runtime_1.jsx)("div", { style: {
                    width: 8,
                    height: 55,
                    borderRadius: 4,
                    background: event.color,
                    filter: isDark ? 'saturate(60%) brightness(120%)' : 'none',
                } }), (0, jsx_runtime_1.jsxs)("div", Object.assign({ style: { display: 'flex', flexDirection: 'column' } }, { children: [(0, jsx_runtime_1.jsx)(EventSummary_1.default, { summary: event.summary, isDark: isDark, type: type, isDarkColor: isDark, event: event }), (0, jsx_runtime_1.jsx)(EventTime_1.default, { isDark: isDark, event: event, type: type, isDarkColor: isDark })] }))] })));
};
exports.default = EventAgenda;
