"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const store_1 = require("../../context/store");
const eva_icons_1 = require("../eva-icons");
const common_1 = require("../../utils/common");
const react_1 = require("react");
const ButtonBase_1 = __importDefault(require("../buttonBase/ButtonBase"));
const ButtonIcon_1 = __importDefault(require("../buttonIcon/ButtonIcon"));
const HeaderCalendarButtons_1 = __importStar(require("../headerCalendarButtons/HeaderCalendarButtons"));
const CalendarViewDropdown = (props) => {
    const { setViewChanged } = props;
    const [isOpen, setOpen] = (0, react_1.useState)(false);
    const [store] = (0, react_1.useContext)(store_1.Context);
    const { config, isMobile, selectedView, translations } = store;
    const { isDark, disabledViews, disableMobileDropdown } = config;
    const handleOpen = () => setOpen(true);
    const handleClose = () => setOpen(false);
    const preventDefault = (e) => {
        e.preventDefault();
        e.stopPropagation();
    };
    return (isMobile && (disableMobileDropdown || (0, HeaderCalendarButtons_1.isSingleView)(disabledViews))) ||
        (0, HeaderCalendarButtons_1.isSingleView)(disabledViews) ? null : ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: 'Kalend__CalendarViewDropdown__wrapper' }, { children: [isMobile ? ((0, jsx_runtime_1.jsx)(ButtonIcon_1.default, Object.assign({ isDark: isDark, onClick: handleOpen }, { children: (0, jsx_runtime_1.jsx)(eva_icons_1.EvaIcons.More, { className: (0, common_1.parseCssDark)('icon-svg', isDark) }) }), 'calendar')) : ((0, jsx_runtime_1.jsx)(ButtonBase_1.default, { isDark: isDark, className: (0, common_1.parseCssDark)('Kalend__ButtonBase-border', isDark), onClick: handleOpen, text: (0, common_1.parseCalendarViewToText)(selectedView, translations) })), isOpen ? ((0, jsx_runtime_1.jsx)("div", { className: 'Kalend__CalendarViewDropdown__backdrop', onClick: handleClose })) : null, isOpen ? ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: (0, common_1.parseCssDark)('Kalend__CalendarViewDropdown__container', isDark) }, { children: (0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'Kalend__CalendarViewDropdown__container-content', onClick: preventDefault }, { children: (0, jsx_runtime_1.jsx)(HeaderCalendarButtons_1.default, { disabledViews: disabledViews, setViewChanged: setViewChanged, handleClose: handleClose, isForcedMobile: true }) })) }))) : null] })) }));
};
exports.default = CalendarViewDropdown;
