"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const constants_1 = require("../../../common/constants");
const enums_1 = require("../../../common/enums");
const store_1 = require("../../../context/store");
const common_1 = require("../../../utils/common");
const react_1 = require("react");
const renderVerticalLines = (calendarDays, width, height, hourHeight, isDark, isMobile, selectedView) => {
    const columnWidth = (0, common_1.getCorrectWidth)(width, isMobile, selectedView) / calendarDays.length;
    return calendarDays.map((calendarDay, index) => {
        const style = {
            left: columnWidth * index +
                (selectedView === enums_1.CALENDAR_VIEW.MONTH ? 0 : constants_1.CALENDAR_OFFSET_LEFT),
            height: hourHeight * 24,
        };
        if (index > 0) {
            return ((0, jsx_runtime_1.jsx)("div", { style: style, className: (0, common_1.parseCssDark)('Kalend__DaysViewVerticalLine__line', isDark) }, index));
        }
    });
};
const DaysViewVerticalLines = () => {
    const [store] = (0, react_1.useContext)(store_1.Context);
    const { calendarDays, width, isDark, height, config, isMobile, selectedView, } = store;
    const verticalLines = renderVerticalLines(selectedView === enums_1.CALENDAR_VIEW.MONTH
        ? calendarDays.slice(0, 7)
        : calendarDays, width, height, config.hourHeight, isDark, isMobile, selectedView);
    return ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: verticalLines }));
};
exports.default = DaysViewVerticalLines;
