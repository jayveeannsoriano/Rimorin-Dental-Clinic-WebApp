"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const enums_1 = require("../common/enums");
const luxon_1 = require("luxon");
const ConfigLayer_1 = require("../layers/ConfigLayer");
const react_1 = require("react");
const reducer_1 = __importDefault(require("./reducer"));
const en_json_1 = __importDefault(require("../locales/en.json"));
exports.Context = (0, react_1.createContext)({});
const StoreProvider = (_a) => {
    var { children } = _a, props = __rest(_a, ["children"]);
    const initialContext = {
        isLoading: false,
        headerEventRowsCount: 0,
        initialView: null,
        selectedView: enums_1.CALENDAR_VIEW.WEEK,
        selectedDate: luxon_1.DateTime.now(),
        calendarDays: [],
        width: 0,
        rawWidth: 0,
        height: 0,
        isMobile: false,
        events: {},
        daysViewLayout: null,
        headerLayout: null,
        monthLayout: null,
        monthOverflowEvents: null,
        showMoreEvents: null,
        showWeekNumbers: false,
        layoutUpdateSequence: 1,
        config: (0, ConfigLayer_1.createConfig)(props),
        callbacks: (0, ConfigLayer_1.createCallbacks)({}),
        direction: enums_1.CALENDAR_NAVIGATION_DIRECTION.TODAY,
        translations: en_json_1.default,
        isNewEventOpen: false,
        draggingDisabledConditions: null,
        isDark: false,
        style: {
            primaryColor: '#ec407a',
            baseColor: '#424242FF',
            inverseBaseColor: '#E5E5E5FF',
        },
        colors: {
            light: {
                primaryColor: '#ec407a',
            },
            dark: {
                primaryColor: '#f48fb1',
            },
        },
    };
    const [store, dispatch] = (0, react_1.useReducer)(reducer_1.default, initialContext);
    return ((0, jsx_runtime_1.jsx)(exports.Context.Provider, Object.assign({ value: [store, dispatch] }, { children: children })));
};
exports.default = StoreProvider;
