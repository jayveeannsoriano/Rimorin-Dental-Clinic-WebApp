"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAllDayEventsArray = exports.parseAllDayEvents = exports.parseAllDayEvent = void 0;
const LuxonHelper_1 = require("./LuxonHelper");
const Helper_1 = require("./Helper");
const KalendHelper_1 = require("./KalendHelper");
const parseAllDayEvent = (event, timezone) => {
    const { dateTimeStart, dateTimeEnd } = (0, KalendHelper_1.getEventDateTime)(event, {
        timezone,
    });
    return Object.assign(Object.assign({}, event), { allDay: event.allDay ||
            LuxonHelper_1.LuxonHelper.differenceInDays(dateTimeStart, dateTimeEnd) > 0 });
};
exports.parseAllDayEvent = parseAllDayEvent;
const parseAllDayEvents = (events, timezone) => {
    const result = {};
    if (!events) {
        return {};
    }
    Object.entries(events).forEach((keyValue) => {
        const eventsItems = keyValue[1];
        eventsItems.forEach((item) => {
            const dateKey = (0, Helper_1.formatToDateKey)((0, LuxonHelper_1.parseToDateTime)(item.startAt, timezone));
            if (result[dateKey]) {
                result[dateKey] = [
                    ...result[dateKey],
                    ...[(0, exports.parseAllDayEvent)(item, timezone)],
                ];
            }
            else {
                result[dateKey] = [(0, exports.parseAllDayEvent)(item, timezone)];
            }
        });
    });
    return result;
};
exports.parseAllDayEvents = parseAllDayEvents;
const parseAllDayEventsArray = (events, timezone) => {
    const result = [];
    if (!events) {
        return [];
    }
    events.forEach((item) => {
        result.push((0, exports.parseAllDayEvent)(item, timezone));
    });
    return result;
};
exports.parseAllDayEventsArray = parseAllDayEventsArray;
