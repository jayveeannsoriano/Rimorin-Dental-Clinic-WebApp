{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOHN LLOYD\\\\Desktop\\\\Test Deployment\\\\main\\\\Test-Repo\\\\client\\\\src\\\\components\\\\timeslot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { Button } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeslot = props => {\n  _s();\n  let intime = \"09:00 AM\";\n  let outtime = \"05:00 PM\";\n  const [result, setResult] = useState([]);\n  const [getTime, setGetTime] = useState(\"\");\n  function intervals(startString, endString) {\n    var start = moment(startString, 'hh:mm a');\n    var end = moment(endString, 'hh:mm a');\n    start.minutes(Math.ceil(start.minutes() / 15) * 15);\n    var current = moment(start);\n    while (current <= end) {\n      if (result.includes(current.format('hh:mm A'))) {\n        return null;\n      } else {\n        result.push(current.format('hh:mm A'));\n        current.add(30, 'minutes'); //minute interval\n      }\n    }\n\n    return result;\n  }\n  intervals(intime, outtime);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slots\",\n    children: result && result.length > 0 ? result.map((time, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeslot\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"time\",\n          value: time,\n          onClick: e => {\n            e.preventDefault();\n            setGetTime(e.target.value);\n            props.onSubmit(time);\n            console.log(time);\n          },\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeslot, \"RqAOp4PA17RZfb+erOEPVhqpP0I=\");\n_c = Timeslot;\nexport default Timeslot;\nvar _c;\n$RefreshReg$(_c, \"Timeslot\");","map":{"version":3,"names":["React","useState","moment","Button","Axios","Timeslot","props","intime","outtime","result","setResult","getTime","setGetTime","intervals","startString","endString","start","end","minutes","Math","ceil","current","includes","format","push","add","length","map","time","index","e","preventDefault","target","value","onSubmit","console","log"],"sources":["C:/Users/JOHN LLOYD/Desktop/Test Deployment/main/Test-Repo/client/src/components/timeslot.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport moment from 'moment';\r\nimport { Button } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\n\r\nconst Timeslot = (props) => {\r\n  let intime = \"09:00 AM\"\r\n  let outtime = \"05:00 PM\"\r\n  const [result, setResult] = useState([])\r\n\r\n  const [getTime, setGetTime] = useState(\"\");\r\n\r\n  function intervals(startString, endString) {\r\n    var start = moment(startString, 'hh:mm a');\r\n    var end = moment(endString, 'hh:mm a');\r\n    start.minutes(Math.ceil(start.minutes() / 15) * 15);\r\n\r\n    var current = moment(start);\r\n\r\n    while (current <= end) {\r\n      if (result.includes(current.format('hh:mm A'))) {\r\n        return null\r\n      }\r\n      else {\r\n        result.push(current.format('hh:mm A'));\r\n        current.add(30, 'minutes'); //minute interval\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  intervals(intime, outtime);\r\n  return (\r\n    <div className='slots'>\r\n      {\r\n        result && result.length > 0 ? result.map((time, index) => {\r\n          return (\r\n            <div className=\"timeslot\" key={index}>\r\n                <Button \r\n                className=\"time\" \r\n                value={time}\r\n                onClick={(e)=>{\r\n                  e.preventDefault();\r\n                  setGetTime(e.target.value)\r\n                  props.onSubmit(time)\r\n                  console.log(time);\r\n                  }}>{time}</Button>\r\n                  \r\n            </div>\r\n          )\r\n        }) : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timeslot"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,IAAIC,MAAM,GAAG,UAAU;EACvB,IAAIC,OAAO,GAAG,UAAU;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAASY,SAAS,CAACC,WAAW,EAAEC,SAAS,EAAE;IACzC,IAAIC,KAAK,GAAGd,MAAM,CAACY,WAAW,EAAE,SAAS,CAAC;IAC1C,IAAIG,GAAG,GAAGf,MAAM,CAACa,SAAS,EAAE,SAAS,CAAC;IACtCC,KAAK,CAACE,OAAO,CAACC,IAAI,CAACC,IAAI,CAACJ,KAAK,CAACE,OAAO,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IAEnD,IAAIG,OAAO,GAAGnB,MAAM,CAACc,KAAK,CAAC;IAE3B,OAAOK,OAAO,IAAIJ,GAAG,EAAE;MACrB,IAAIR,MAAM,CAACa,QAAQ,CAACD,OAAO,CAACE,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE;QAC9C,OAAO,IAAI;MACb,CAAC,MACI;QACHd,MAAM,CAACe,IAAI,CAACH,OAAO,CAACE,MAAM,CAAC,SAAS,CAAC,CAAC;QACtCF,OAAO,CAACI,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;MAC9B;IACF;;IAEA,OAAOhB,MAAM;EACf;EAEAI,SAAS,CAACN,MAAM,EAAEC,OAAO,CAAC;EAC1B,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,UAElBC,MAAM,IAAIA,MAAM,CAACiB,MAAM,GAAG,CAAC,GAAGjB,MAAM,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACxD,oBACE;QAAK,SAAS,EAAC,UAAU;QAAA,uBACrB,QAAC,MAAM;UACP,SAAS,EAAC,MAAM;UAChB,KAAK,EAAED,IAAK;UACZ,OAAO,EAAGE,CAAC,IAAG;YACZA,CAAC,CAACC,cAAc,EAAE;YAClBnB,UAAU,CAACkB,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;YAC1B3B,KAAK,CAAC4B,QAAQ,CAACN,IAAI,CAAC;YACpBO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;UACjB,CAAE;UAAA,UAAEA;QAAI;UAAA;UAAA;UAAA;QAAA;MAAU,GATOC,KAAK;QAAA;QAAA;QAAA;MAAA,QAW9B;IAEV,CAAC,CAAC,GAAG;EAAI;IAAA;IAAA;IAAA;EAAA,QAEP;AAEV,CAAC;AAAA,GAlDKxB,QAAQ;AAAA,KAARA,QAAQ;AAoDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}